{"remainingRequest":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/components/questions/HighLight.vue?vue&type=style&index=0&id=60997291&lang=scss&scoped=true&","dependencies":[{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/components/questions/HighLight.vue","mtime":1641889482743},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/css-loader/dist/cjs.js","mtime":1638342838556},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1638342838967},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/postcss-loader/src/index.js","mtime":1638342838955},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/sass-loader/dist/cjs.js","mtime":1638353649972},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/cache-loader/dist/cjs.js","mtime":1638341829149},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/vue-loader/lib/index.js","mtime":1638342838967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKL2RlZXAvIC5obCB7CiAgYmFja2dyb3VuZDogcmVkOwp9Cg=="},{"version":3,"sources":["HighLight.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA","file":"HighLight.vue","sourceRoot":"src/components/questions","sourcesContent":["<template lang=\"\">\n    <div v-html=\"htmlString\" />\n</template>\n<script lang=\"ts\">\nimport { Component, Vue, Prop } from \"vue-property-decorator\";\n@Component({})\nexport default class HighLight extends Vue {\n  @Prop({ default: \"\" })\n  private text!: String;\n  @Prop({ default: \"\" })\n  private targets!: Array<any>;\n\n  // get text highlight\n  get htmlString() {\n    if (!this.targets || !this.targets.length) {\n      return this.text;\n    }\n    const patternStr = \"(?:\" + this.targets.join(\"|\") + \")\";\n    const caseInsensitiveMatching = new RegExp(patternStr, \"gi\");\n    return this.text.replace(\n      caseInsensitiveMatching,\n      (matched) => `<span class=\"hl\">${matched}</span>`\n    );\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n/deep/ .hl {\n  background: red;\n}\n</style>\n"]}]}