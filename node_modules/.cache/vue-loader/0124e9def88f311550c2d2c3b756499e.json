{"remainingRequest":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/components/questions/AutoCompleteInput.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/components/questions/AutoCompleteInput.vue","mtime":1641887768092},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/css-loader/dist/cjs.js","mtime":1638342838556},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1638342838967},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/postcss-loader/src/index.js","mtime":1638342838955},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/sass-loader/dist/cjs.js","mtime":1638353649972},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/cache-loader/dist/cjs.js","mtime":1638341829149},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/vue-loader/lib/index.js","mtime":1638342838967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hdXRvLWNvbXBsZXRlLWNvbnRhaW5lciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHdpZHRoOiAxMDAlOwp9Ci5hdXRvLWNvbXBsZXRlIHsKICB0b3A6IDQwcHg7CiAgd2lkdGg6IDEwMCU7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJhY2tncm91bmQ6IHdoaXRlOwogIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JheTsKICBib3JkZXItcmFkaXVzOiAwLjI1cmVtOwogIC5hdXRvLWNvbXBsZXRlLWl0ZW0gewogICAgcGFkZGluZzogNXB4IDEwcHg7CiAgICAmOmhvdmVyIHsKICAgICAgYmFja2dyb3VuZDogI2Y1ZjVmNTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["AutoCompleteInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutoCompleteInput.vue","sourceRoot":"src/components/questions","sourcesContent":["<template lang=\"\">\n    <div class=\"auto-complete-container\">\n        <b-form-input v-model=\"text\" @keyup.enter=\"$emit('enter',$event)\" autocomplete=\"true\"  @keyup.delete=\"$emit('delete',$event)\" ref=\"input\" @blur=\"blur\" @input=\"onTextChange\" class=\"search-input\" @focus=\"focus\"  :placeholder=\"placeholder\"/>\n        <div v-if=\"isFocused&& autoCompleteData.length>0\" class=\"auto-complete\">\n            <div class=\"auto-complete-item\" v-for=\"item,index in autoCompleteData\" :key=\"index\" @mousedown=\"setText(item)\">\n                <span>{{item}}</span>\n            </div>\n        </div>\n    </div>\n    \n</template>\n<script lang=\"ts\">\nimport { BFormInput } from \"bootstrap-vue\";\nimport { Component, Prop, Vue, Watch } from \"vue-property-decorator\";\n@Component({\n  components: {\n    BFormInput,\n  },\n})\nexport default class AutoCompleteInput extends Vue {\n  isFocused = false;\n  suggestText = [\n    \"ticket is\",\n    \"ticket for\",\n    \"ticket and train\",\n    \"fare is\",\n    \"what is fare\",\n    \"enough is\",\n  ];\n  text = \"\";\n  autoCompleteData: any = [];\n\n  @Prop({ default: \"\" })\n  private placeholder!: String;\n  @Prop({ default: \"\" })\n  private value!: String;\n  onTextChange(event: any) {\n    this.$emit(\"input\", event);\n  }\n  focus(event: any) {\n    this.isFocused = true;\n    this.$emit(\"focus\", event);\n  }\n  blur() {\n    this.isFocused = false;\n  }\n  setText(text: any) {\n    this.$emit(\"input\", text);\n    this.$emit(\"enter\");\n  }\n\n  @Watch(\"text\")\n  private textChange() {\n    this.autoCompleteData =\n      this.text.length > 0\n        ? this.suggestText.filter(\n            (x) => x.includes(this.text) && x !== this.text\n          )\n        : [];\n  }\n  @Watch(\"value\")\n  onValueChange(newValue: any) {\n    if (newValue != this.text) this.text = newValue;\n  }\n}\n</script>\n<style lang=\"scss\">\n.auto-complete-container {\n  position: relative;\n  width: 100%;\n}\n.auto-complete {\n  top: 40px;\n  width: 100%;\n  position: absolute;\n  background: white;\n  border: 1px solid lightgray;\n  border-radius: 0.25rem;\n  .auto-complete-item {\n    padding: 5px 10px;\n    &:hover {\n      background: #f5f5f5;\n    }\n  }\n}\n</style>"]}]}