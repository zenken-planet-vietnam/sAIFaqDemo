{"remainingRequest":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/thread-loader/dist/cjs.js!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/babel-loader/lib/index.js!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/ts-loader/index.js??ref--15-3!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js??ref--14-0!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/store/modules/category/index.ts","dependencies":[{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/store/modules/category/index.ts","mtime":1641895552547},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/babel.config.js","mtime":1641544761991},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/cache-loader/dist/cjs.js","mtime":1638341829149},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/thread-loader/dist/cjs.js","mtime":1638341830219},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/babel-loader/lib/index.js","mtime":1638342835865},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/ts-loader/index.js","mtime":1638341829162},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js","mtime":1638342837904}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js??ref--14-0!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/store/modules/category/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\nimport axios from \"@/axios\"\nimport store from \"@/store\"\nimport { VuexModule, Module, Action, Mutation, getModule } from \"vuex-module-decorators\"\nimport { recursiveCloseMenu, recursiveOpenMenu, recursiveSelectedMenu } from './helper'\nexport interface ICategoryState {\n    categories: Array<any>\n}\n\n\n@Module({ dynamic: true, store, name: 'category' })\nclass Category extends VuexModule implements ICategoryState {\n    public categories = []\n    @Mutation\n    UPDATE_CATEGORIES(payload: any) {\n        this.categories = payload.data\n    }\n    @Mutation\n    UPDTATE_OPEN_GROUP(payload: any) {\n        // open menu\n        if (payload.value === true) {\n            for (let i = 0; i < this.categories.length; i++) {\n                const element: any = this.categories[i];\n                element.isOpen = recursiveOpenMenu(element, payload)\n            }\n        }\n        // close menu\n        else {\n            recursiveCloseMenu(this.categories, payload)\n        }\n\n    }\n    @Mutation\n    UPDTATE_SELECTED_MENU(payload: any) {\n        recursiveSelectedMenu(this.categories, payload)\n    }\n    @Action\n    public async getCategory() {\n        const { data } = await axios.get(\"category/\")\n        // createMultilevel(data.data)\n        await this.recursiveGetCategory(data.data)\n        this.UPDATE_CATEGORIES(data)\n    }\n    @Action\n    //  recursive get child category\n    async recursiveGetCategory(categories: any) {\n        if (categories.length > 0) {\n            for (let i = 0; i < categories.length; i++) {\n                const element = categories[i];\n                const child = await this.getChildCategory({ parent_id: element.id })\n                element.childs = child.data\n                element.isOpen = false\n                if (element.childs.length > 0) {\n                    await this.recursiveGetCategory(element.childs)\n                }\n                else element.isSelected = false\n            }\n        }\n    }\n    @Action\n    // get child category\n    async getChildCategory(params: any) {\n        const { data } = await axios.get(\"category/\", { params: params })\n        return data\n    }\n    @Action\n    // update open navbar group\n    updateGroupOpen(value: any) {\n        this.UPDTATE_OPEN_GROUP(value)\n    }\n    @Action\n    // update seleted navbar link\n    selectedCategory(id: any) {\n        this.UPDTATE_SELECTED_MENU(id)\n    }\n\n}\nexport const CategoryModule = getModule(Category)\n\n\n\n"],"sourceRoot":""}]}