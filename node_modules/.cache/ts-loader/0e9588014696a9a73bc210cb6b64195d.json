{"remainingRequest":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/babel-loader/lib/index.js!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/ts-loader/index.js??ref--15-2!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js??ref--14-0!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/@core/libs/search.ts","dependencies":[{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/@core/libs/search.ts","mtime":1641890413987},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/babel.config.js","mtime":1641544761991},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/cache-loader/dist/cjs.js","mtime":1638341829149},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/babel-loader/lib/index.js","mtime":1638342835865},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/ts-loader/index.js","mtime":1638341829162},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js","mtime":1638342837904}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js??ref--14-0!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/@core/libs/search.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport tinySegmenter from \"./tinySegmenter\"\nclass BaseSearch {\n    search(query = '') { }\n}\n\nexport class FullTextSearch extends BaseSearch {\n    scriptData: any\n    levenWords: any\n    constructor(scriptData: any) {\n        super()\n        this.scriptData = scriptData\n        this.levenWords = []\n    }\n    // query: text input for search\n    //tags : keyword for search\n    search(query = '', tags = []) {\n        if (query.length < 1 && tags.length === 0) {\n            return {\n                questions: this.scriptData.questions,\n                words: []\n            }\n        }\n        const words = tinySegmenter.segmentNoneSpace(query)\n        tags.forEach((element: any) => {\n            words.push(element.text)\n        });\n        const results = this.checkTextIncludeWords(words)\n        // results = results.sort((x, y) => y.weight - x.weight)\n        const questions = this.scriptData.questions.filter((x: any) => results.find((y: any) => y === x.id) !== undefined)\n        return {\n            questions,\n            words: [...words, ...this.levenWords]\n        }\n    }\n    // check document include list word \n    checkTextIncludeWords(words: any) {\n        const results = []\n        for (let i = 0; i < words.length; i++) {\n            const element = words[i];\n            const result: any = []\n            for (const word in this.scriptData.invertedIndex) {\n                const invertedData = this.scriptData.invertedIndex[word]\n                // check synonym and add synonym to list search\n                const isSynonym = this.checkSynonym(element, invertedData.synonyms)\n                if (word.includes(element) || isSynonym || this.levenshteinDistance(word, element)) {\n                    invertedData.scripts.forEach((item: any) => {\n                        const script = result.find((x: any) => x.id === item.id)\n                        if (!script) result.push(item)\n                        else if (script.weight < item.weight) script.weight = item.weight\n                    });\n                }\n            }\n            results.push(result)\n        }\n        // take the joint result part of all results\n        const expectResults = this.getGeneralItem(results)\n        expectResults.sort((a: any, b: any) => {\n            return b.weight - a.weight\n        })\n        return expectResults.map((x: any) => x.id)\n    }\n    //get documemt contains all text\n    getGeneralItem(items: any) {\n        if (items.length === 0) return []\n        if (items.length === 1) return items[0]\n        const results = []\n        for (let i = 0; i < items[0].length; i++) {\n            const element = items[0][i];\n            let isContain = true\n            for (let j = 1; j < items.length; j++) {\n                const item = items[j];\n                if (item.find((x: any) => x.id == element.id) === undefined) {\n                    isContain = false\n                    break;\n                }\n            }\n            if (isContain) results.push(element)\n        }\n        return results\n    }\n    //levenshteinDistance algorithm copy right \n    levenshteinDistance(str1 = '', str2 = '') {\n        const track = Array(str2.length + 1).fill(null).map(() =>\n            Array(str1.length + 1).fill(null));\n        for (let i = 0; i <= str1.length; i += 1) {\n            track[0][i] = i;\n        }\n        for (let j = 0; j <= str2.length; j += 1) {\n            track[j][0] = j;\n        }\n        for (let j = 1; j <= str2.length; j += 1) {\n            for (let i = 1; i <= str1.length; i += 1) {\n                const indicator = str1[i - 1] === str2[j - 1] ? 0 : 1;\n                track[j][i] = Math.min(\n                    track[j][i - 1] + 1, // deletion\n                    track[j - 1][i] + 1, // insertion\n                    track[j - 1][i - 1] + indicator, // substitution\n                );\n            }\n        }\n        const value = 1 - track[str2.length][str1.length] * 2 / (str1.length + str2.length);\n        if (value > 0.5) {\n            this.levenWords.push(str1)\n            return true\n        }\n        return false\n    }\n\n    // check synonym with text\n    checkSynonym(text: any, synonyms: any) {\n        if (synonyms.length < 1) return false\n        if (synonyms.indexOf(text) !== -1) {\n            synonyms.forEach((element: any) => {\n                if (this.levenWords.indexOf(element) === -1)\n                    this.levenWords.push(element)\n            });\n            return true\n        }\n        return false\n    }\n}"],"sourceRoot":""}]}