{"remainingRequest":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/babel-loader/lib/index.js!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/ts-loader/index.js??ref--15-2!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js??ref--14-0!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/@core/libs/analysis.ts","dependencies":[{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/@core/libs/analysis.ts","mtime":1641889478785},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/babel.config.js","mtime":1641544761991},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/cache-loader/dist/cjs.js","mtime":1638341829149},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/babel-loader/lib/index.js","mtime":1638342835865},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/ts-loader/index.js","mtime":1638341829162},{"path":"/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js","mtime":1638342837904}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvdGhhaW5ndXllbnRhbi9Eb2N1bWVudHMvWkVOS0VOLVBMQU5FVC9zQUlGYXFEZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL3RoYWluZ3V5ZW50YW4vRG9jdW1lbnRzL1pFTktFTi1QTEFORVQvc0FJRmFxRGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIjsKCi8qIGVzbGludC1kaXNhYmxlIGNvbnN0cnVjdG9yLXN1cGVyICovCgovKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqLwppbXBvcnQgdGlueVNlZ21lbnRlciBmcm9tICIuL3RpbnlTZWdtZW50ZXIiOwppbXBvcnQgc3lub255bSBmcm9tICcuL3N5bm9ueW1EaWN0aW9uYXJ5JzsKZXhwb3J0IHZhciBhbmFseXNpcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gYW5hbHlzaXMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgYW5hbHlzaXMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKGFuYWx5c2lzLCBbewogICAga2V5OiAiYW5hbHlzaXNEYXRhIiwKICAgIHZhbHVlOiAvLyBhbmFseXMgZGF0YQogICAgZnVuY3Rpb24gYW5hbHlzaXNEYXRhKHF1ZXN0aW9ucykgewogICAgICB2YXIgdGFnUGFja2FnZSA9IHsKICAgICAgICBxdWVzdGlvbnM6IHF1ZXN0aW9ucywKICAgICAgICBpbnZlcnRlZEluZGV4OiB0aGlzLmludmVydGVkSW5kZXgocXVlc3Rpb25zKQogICAgICB9OwogICAgICByZXR1cm4gdGFnUGFja2FnZTsKICAgIH0gLy8gZ2V0IGludmVydGVkaW5kZXggZnJvbSBsaXN0IG9mIHF1ZXN0aW9uCgogIH0sIHsKICAgIGtleTogImludmVydGVkSW5kZXgiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGludmVydGVkSW5kZXgocXVlc3Rpb25zKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgaW52ZXJ0ZWREYXRhcyA9IHt9OwogICAgICB2YXIgZG9jdW1lbnRzID0gW107IC8vIGNyZWF0ZSBkb2N1bWVudHMgZnJvbSB0ZXJtIG9mIGxpc3QgcXVlc3Rpb24KCiAgICAgIHF1ZXN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgdmFyIGRvY3VtZW50ID0ge307CiAgICAgICAgdmFyIHdvcmRzID0gdGlueVNlZ21lbnRlci5yZW1vdmVTdG9wV29yZChlbGVtZW50LmxhYmVsKTsKICAgICAgICBkb2N1bWVudC5pZCA9IGVsZW1lbnQuaWQ7CiAgICAgICAgZG9jdW1lbnQudGVybXMgPSBbXTsKICAgICAgICB3b3Jkcy5mb3JFYWNoKGZ1bmN0aW9uICh3b3JkKSB7CiAgICAgICAgICB2YXIgd29yZFRyaW0gPSB3b3JkLnRvTG93ZXJDYXNlKCkudHJpbSgpOwoKICAgICAgICAgIGlmICh3b3JkVHJpbS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGRvY3VtZW50LnRlcm1zLnB1c2god29yZFRyaW0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGRvY3VtZW50cy5wdXNoKGRvY3VtZW50KTsKICAgICAgfSk7IC8vIGludmVydGVkX2luZGV4IGFuZCBjYWxjdWxhdGUgd2VpZ2h0IHRlcm0gaW4gZG9jdW1lbnQgdXNpbmcgdGYtaWRmIAoKICAgICAgZG9jdW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGRvY3VtZW50KSB7CiAgICAgICAgZG9jdW1lbnQudGVybXMuZm9yRWFjaChmdW5jdGlvbiAod29yZCkgewogICAgICAgICAgdmFyIHNjcmlwdCA9IHsKICAgICAgICAgICAgaWQ6IGRvY3VtZW50LmlkLAogICAgICAgICAgICB3ZWlnaHQ6IF90aGlzLnRmX2lkZih3b3JkLCBkb2N1bWVudCwgZG9jdW1lbnRzKQogICAgICAgICAgfTsKICAgICAgICAgIGlmICghaW52ZXJ0ZWREYXRhc1t3b3JkXSkgaW52ZXJ0ZWREYXRhc1t3b3JkXSA9IHsKICAgICAgICAgICAgdGV4dDogd29yZCwKICAgICAgICAgICAgc2NyaXB0czogW3NjcmlwdF0sCiAgICAgICAgICAgIC8vIGdldCBzeW5vbnltcyBmcm9tIHdvcmQKICAgICAgICAgICAgc3lub255bXM6IF90aGlzLmdldFN5bm9ueW0od29yZCkKICAgICAgICAgIH07ZWxzZSB7CiAgICAgICAgICAgIGludmVydGVkRGF0YXNbd29yZF0uc2NyaXB0cy5wdXNoKHNjcmlwdCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOyAvLyBnZXQgc3lub255bQogICAgICAvLyBmb3IgKGxldCBlbGVtZW50IGluIGludmVydGVkRGF0YXMpIHsKICAgICAgLy8gICAgIGludmVydGVkRGF0YXNbZWxlbWVudF0uc3lub255bXMgPSB0aGlzLmdldFN5bm9ueW0oZWxlbWVudCkKICAgICAgLy8gfQoKICAgICAgcmV0dXJuIGludmVydGVkRGF0YXM7CiAgICB9IC8vIGdldCBzeW5vbnltCgogIH0sIHsKICAgIGtleTogImdldFN5bm9ueW0iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFN5bm9ueW0od29yZCkgewogICAgICB2YXIgc3lub255bXMgPSBbXTsKCiAgICAgIGZvciAodmFyIGl0ZW0gaW4gc3lub255bSkgewogICAgICAgIGlmIChpdGVtLnRvTG93ZXJDYXNlKCkgPT09IHdvcmQpIHsKICAgICAgICAgIHN5bm9ueW1zLnB1c2goc3lub255bVtpdGVtXSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoc3lub255bVtpdGVtXSA9PT0gd29yZCkgewogICAgICAgICAgc3lub255bXMucHVzaChpdGVtKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzeW5vbnltczsKICAgIH0gLy8gdGVybSBmcmVxdWVuY2UgaW4gZG9jCgogIH0sIHsKICAgIGtleTogInRmIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB0Zih0ZXJtLCBkb2MpIHsKICAgICAgdmFyIHJlc3VsdCA9IDA7CiAgICAgIGRvYy50ZXJtcy5mb3JFYWNoKGZ1bmN0aW9uICh3b3JkKSB7CiAgICAgICAgaWYgKHdvcmQgPT0gdGVybSkgcmVzdWx0ICs9IDE7CiAgICAgIH0pOwogICAgICByZXR1cm4gcmVzdWx0IC8gZG9jLnRlcm1zLmxlbmd0aDsKICAgIH0gLy8gdGVybSBpbnZlcnNlIGRvY3VtZW50IGZyZXF1ZW5jeQoKICB9LCB7CiAgICBrZXk6ICJpZGYiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlkZih0ZXJtLCBkb2NzKSB7CiAgICAgIHZhciByZXN1bHQgPSAwOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkb2NzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGRvYyA9IGRvY3NbaV07CgogICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZG9jLnRlcm1zLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICB2YXIgd29yZCA9IGRvYy50ZXJtc1tqXTsKCiAgICAgICAgICBpZiAod29yZCA9PT0gdGVybSkgewogICAgICAgICAgICByZXN1bHQgKz0gMTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gTWF0aC5sb2coZG9jcy5sZW5ndGggLyByZXN1bHQpOwogICAgfSAvLyB0Zi1pZGYKCiAgfSwgewogICAga2V5OiAidGZfaWRmIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB0Zl9pZGYodGVybSwgZG9jLCBkb2NzKSB7CiAgICAgIHJldHVybiB0aGlzLnRmKHRlcm0sIGRvYykgKiB0aGlzLmlkZih0ZXJtLCBkb2NzKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBhbmFseXNpczsKfSgpOw=="},{"version":3,"sources":["/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/node_modules/eslint-loader/index.js??ref--14-0!/Users/thainguyentan/Documents/ZENKEN-PLANET/sAIFaqDemo/src/@core/libs/analysis.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable constructor-super */\n/* eslint-disable no-unused-vars */\nimport tinySegmenter from \"./tinySegmenter\";\nimport synonym from './synonymDictionary'\nexport class analysis {\n\n    // analys data\n    analysisData(questions: any) {\n        const tagPackage: any = {\n            questions: questions,\n            invertedIndex: this.invertedIndex(questions)\n        }\n        return tagPackage\n    }\n    // get invertedindex from list of question\n    invertedIndex(questions: any) {\n        const invertedDatas: any = {}\n        const documents: any = []\n        // create documents from term of list question\n        questions.forEach((element: any) => {\n            const document: any = {}\n            const words = tinySegmenter.removeStopWord(element.label)\n            document.id = element.id\n            document.terms = []\n            words.forEach((word: any) => {\n                const wordTrim = word.toLowerCase().trim()\n                if (wordTrim.length > 0) {\n                    document.terms.push(wordTrim)\n                }\n\n            });\n            documents.push(document)\n        });\n        // inverted_index and calculate weight term in document using tf-idf \n        documents.forEach((document: any) => {\n            document.terms.forEach((word: any) => {\n                const script = {\n                    id: document.id,\n                    weight: this.tf_idf(word, document, documents)\n                }\n                if (!invertedDatas[word])\n                    invertedDatas[word] = {\n                        text: word,\n                        scripts: [\n                            script\n                        ],\n                        // get synonyms from word\n                        synonyms: this.getSynonym(word)\n                    }\n                else {\n                    invertedDatas[word].scripts.push(\n                        script\n                    )\n                }\n\n            });\n        });\n        // get synonym\n        // for (let element in invertedDatas) {\n        //     invertedDatas[element].synonyms = this.getSynonym(element)\n        // }\n        return invertedDatas\n    }\n    // get synonym\n    getSynonym(word: any) {\n        const synonyms: any = []\n        for (const item in synonym) {\n            if (item.toLowerCase() === word) {\n                synonyms.push((synonym as any)[item])\n            }\n            if ((synonym as any)[item] === word) {\n                synonyms.push(item)\n            }\n        }\n        return synonyms\n    }\n    // term frequence in doc\n    tf(term: any, doc: any) {\n        let result = 0\n        doc.terms.forEach((word: any) => {\n            if (word == term)\n                result += 1\n        });\n        return result / doc.terms.length\n    }\n    // term inverse document frequency\n    idf(term: any, docs: any) {\n        let result = 0\n        for (let i = 0; i < docs.length; i++) {\n            const doc = docs[i];\n            for (let j = 0; j < doc.terms.length; j++) {\n                const word = doc.terms[j];\n                if (word === term) {\n                    result += 1\n                    break\n                }\n            }\n\n        }\n        return Math.log(docs.length / result)\n    }\n    // tf-idf\n    tf_idf(term: any, doc: any, docs: any) {\n        return this.tf(term, doc) * this.idf(term, docs)\n    }\n}"],"sourceRoot":""}]}